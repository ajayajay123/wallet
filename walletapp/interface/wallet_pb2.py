# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: wallet.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='wallet.proto',
  package='',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x0cwallet.proto\"\x1a\n\nWalletData\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\t2\xfd\x01\n\x06Wallet\x12&\n\x08\x61\x64\x64_user\x12\x0b.WalletData\x1a\x0b.WalletData\"\x00\x12,\n\x0esetup_contract\x12\x0b.WalletData\x1a\x0b.WalletData\"\x00\x12.\n\x10\x63ontract_execute\x12\x0b.WalletData\x1a\x0b.WalletData\"\x00\x12-\n\x0fremove_contract\x12\x0b.WalletData\x1a\x0b.WalletData\"\x00\x12>\n callback_of_complete_transaction\x12\x0b.WalletData\x1a\x0b.WalletData\"\x00\x62\x06proto3'
)




_WALLETDATA = _descriptor.Descriptor(
  name='WalletData',
  full_name='WalletData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='data', full_name='WalletData.data', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16,
  serialized_end=42,
)

DESCRIPTOR.message_types_by_name['WalletData'] = _WALLETDATA
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

WalletData = _reflection.GeneratedProtocolMessageType('WalletData', (_message.Message,), {
  'DESCRIPTOR' : _WALLETDATA,
  '__module__' : 'wallet_pb2'
  # @@protoc_insertion_point(class_scope:WalletData)
  })
_sym_db.RegisterMessage(WalletData)



_WALLET = _descriptor.ServiceDescriptor(
  name='Wallet',
  full_name='Wallet',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=45,
  serialized_end=298,
  methods=[
  _descriptor.MethodDescriptor(
    name='add_user',
    full_name='Wallet.add_user',
    index=0,
    containing_service=None,
    input_type=_WALLETDATA,
    output_type=_WALLETDATA,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='setup_contract',
    full_name='Wallet.setup_contract',
    index=1,
    containing_service=None,
    input_type=_WALLETDATA,
    output_type=_WALLETDATA,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='contract_execute',
    full_name='Wallet.contract_execute',
    index=2,
    containing_service=None,
    input_type=_WALLETDATA,
    output_type=_WALLETDATA,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='remove_contract',
    full_name='Wallet.remove_contract',
    index=3,
    containing_service=None,
    input_type=_WALLETDATA,
    output_type=_WALLETDATA,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='callback_of_complete_transaction',
    full_name='Wallet.callback_of_complete_transaction',
    index=4,
    containing_service=None,
    input_type=_WALLETDATA,
    output_type=_WALLETDATA,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_WALLET)

DESCRIPTOR.services_by_name['Wallet'] = _WALLET

# @@protoc_insertion_point(module_scope)
